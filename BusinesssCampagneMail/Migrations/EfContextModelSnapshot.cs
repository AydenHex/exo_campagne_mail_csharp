// <auto-generated />
using BusinesssCampagneMail.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusinesssCampagneMail.Migrations
{
    [DbContext(typeof(EfContext))]
    partial class EfContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("BusinesssCampagneMail.Models.Campagne", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nom")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Campagnes");
                });

            modelBuilder.Entity("BusinesssCampagneMail.Models.Mail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CampagneId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("prenom")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("CampagneId");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("BusinesssCampagneMail.Models.Mail", b =>
                {
                    b.HasOne("BusinesssCampagneMail.Models.Campagne", "Campagne")
                        .WithMany("mails")
                        .HasForeignKey("CampagneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
